{"stats": {"errors": 0, "failures": 1, "passes": 6, "skipped": 0, "encoding": "UTF-8", "total": 7}, "results": [{"classname": "index_test:TestDistance", "name": "test_avenue_distance", "time": 0.00016498565673828125, "type": "success"}, {"classname": "index_test:TestDistance", "name": "test_distance", "time": 6.556510925292969e-05, "type": "success"}, {"classname": "index_test:TestDistance", "name": "test_distance_all", "time": 0.001623392105102539, "type": "failure", "errtype": "builtins.AssertionError", "message": "Lists differ: [{'name': 'Fred', 'avenue': 4, 'street': 8, [380 chars]661}] != [{'avenue': 1, 'distance': 4.242640687119285[319 chars]: 4}]\n\nFirst differing element 0:\n{'name': 'Fred', 'avenue': 4, 'street': 8, 'distance': 0.0}\n{'avenue': 1, 'distance': 4.242640687119285, 'name': 'Suzie', 'street': 11}\n\nFirst list contains 1 additional elements.\nFirst extra element 5:\n{'name': 'Natalie', 'avenue': 5, 'street': 4, 'distance': 4.123105625617661}\n\n- [{'avenue': 4, 'distance': 0.0, 'name': 'Fred', 'street': 8},\n-  {'avenue': 1, 'distance': 4.242640687119285, 'name': 'Suzie', 'street': 11},\n? ^\n\n+ [{'avenue': 1, 'distance': 4.242640687119285, 'name': 'Suzie', 'street': 11},\n? ^\n\n   {'avenue': 5, 'distance': 1.0, 'name': 'Bob', 'street': 8},\n   {'avenue': 6, 'distance': 5.385164807134504, 'name': 'Edgar', 'street': 13},\n   {'avenue': 3, 'distance': 2.23606797749979, 'name': 'Steven', 'street': 6},\n   {'avenue': 5, 'distance': 4.123105625617661, 'name': 'Natalie', 'street': 4}]", "tb": "Traceback (most recent call last):\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 67, in testPartExecutor\n    yield\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 625, in run\n    testMethod()\n  File \"/home/ellire/calculating-distance-lab-data-science-intro-000/test/index_test.py\", line 28, in test_distance_all\n    {'avenue': 5, 'distance': 4.123105625617661, 'name': 'Natalie', 'street': 4}])\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 836, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 1032, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 1014, in assertSequenceEqual\n    self.fail(msg)\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 690, in fail\n    raise self.failureException(msg)\nAssertionError: Lists differ: [{'name': 'Fred', 'avenue': 4, 'street': 8, [380 chars]661}] != [{'avenue': 1, 'distance': 4.242640687119285[319 chars]: 4}]\n\nFirst differing element 0:\n{'name': 'Fred', 'avenue': 4, 'street': 8, 'distance': 0.0}\n{'avenue': 1, 'distance': 4.242640687119285, 'name': 'Suzie', 'street': 11}\n\nFirst list contains 1 additional elements.\nFirst extra element 5:\n{'name': 'Natalie', 'avenue': 5, 'street': 4, 'distance': 4.123105625617661}\n\n- [{'avenue': 4, 'distance': 0.0, 'name': 'Fred', 'street': 8},\n-  {'avenue': 1, 'distance': 4.242640687119285, 'name': 'Suzie', 'street': 11},\n? ^\n\n+ [{'avenue': 1, 'distance': 4.242640687119285, 'name': 'Suzie', 'street': 11},\n? ^\n\n   {'avenue': 5, 'distance': 1.0, 'name': 'Bob', 'street': 8},\n   {'avenue': 6, 'distance': 5.385164807134504, 'name': 'Edgar', 'street': 13},\n   {'avenue': 3, 'distance': 2.23606797749979, 'name': 'Steven', 'street': 6},\n   {'avenue': 5, 'distance': 4.123105625617661, 'name': 'Natalie', 'street': 4}]\n"}, {"classname": "index_test:TestDistance", "name": "test_distance_between_neighbors_squared", "time": 9.298324584960938e-05, "type": "success"}, {"classname": "index_test:TestDistance", "name": "test_distance_with_neighbor", "time": 0.00011086463928222656, "type": "success"}, {"classname": "index_test:TestDistance", "name": "test_nearest_neighbors", "time": 9.036064147949219e-05, "type": "success"}, {"classname": "index_test:TestDistance", "name": "test_street_distance", "time": 8.058547973632812e-05, "type": "success"}]}